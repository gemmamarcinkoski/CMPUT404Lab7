#restful sources allow web access to things you would usually store in a database
#/usr/bin/env python

# the function following this should be called when this route is requested
# @app.route('/')

from flask import Flask
from flask_restful import Resource, Api, reqparse, abort

app = Flask(__name__)
api = Api(app) # connects flask stuff to flast restful stuff

# an interface meant to be used by other pieces of software. to do list.
parser = reqparse.RequestParser()
parser.add_argument('task')

# The latest NoSQL key-value store trending on Hacker News.
TODOs = {
    1: {'task': 'eat chocolate'},
    2: {'task': 'take out garbage'},
    3: {'task': 'profit'},
}


class Todo(Resource):
    """
    Shows a single TODO item and lets you delete a TODO item.
    """

    def get(self, todo_id):
        abort_if_todo_not_found(todo_id)
        return TODOs[todo_id] #stores todos in python list
		
    def delete(self, todo_id):
        abort_if_todo_not_found(todo_id)
        del TODOs[todo_id]
        return '', 204

    def put(self, todo_id):
				# 201 meaning something was successfully created
        return add_todo(todo_id), 201
			
def add_todo(todo_id):
    args = parser.parse_args()
    todo = {'task': args['task']}
    TODOs[todo_id] = todo
    return todo

def abort_if_todo_not_found(todo_id):
    if todo_id not in TODOs:
        abort(404, message="TODO {} does not exist".format(todo_id))

class TodoList(Resource):
    """
    Shows a list of all TODOs and lets you POST to add new tasks.
    """
    def get(self):
        return TODOs
    
# general post if not id is made yet
    def post(self):
        todo_id = max(TODOs.keys()) + 1
        return add_todo(todo_id), 201


#api.add_resource(HelloWorld, "/") # adding resource to our rest api
# what url our helo world resource will be at
# it returns a python data structure,
# but will automatically turn it into a json data structure for us

api.add_resource(Todo, '/todos/<int:todo_id>')
api.add_resource(TodoList, '/todos')

#if we are running like a python script this will be true
#but if we had imported from another file it would be false
if __name__ == "__main__":
    app.run(debug=True)
